This project is my steps in learning the basics of Clojure.
I've never worked with Lisp, Haskell or any other functional languages, and chose to try out Clojure because of it's hype. I also found it fascinating that Clojure can be compiled to run on JVM, .NET's virtual machine, and even be decompiled to JS. 

Getting Started
  This project is a result of following R. Mark Volkmanns tutorial on Clojure.
  His tutorial can be found here http://java.ociweb.com/mark/clojure/article.html
  
  Progress
  [+] Introduction
  [+] Functional Programming
  [+] Clojure Overview
  [+] Getting Started
  [+] Clojure Syntax
  [+] REPL
  [+] Bindings
  [+] Collections
  [-] StructMaps
  [+] Defining Functions
  [/] Java Interoperability
  [ ] Conditional Processing
  [ ] Iteration
  [ ] Recursion
  [ ] Predicates
  [ ] Sequences
  [ ] Input/Output
  [ ] Destructuring
  [ ] Namespaces
  [ ] Metadata
  [ ] Macros
  [ ] Concurrency
  [ ] Reference Types
  [ ] Compiling
  [ ] Automated Testing
  [ ] Editors and IDEs
  [ ] Desktop Applications
  [ ] Web Applications
  [ ] Databases
  [ ] Libraries
  [ ] Conclusion
  

Project Euler
  Over time I've found project Euler (project-euler.com) to be a good start point for learning the syntax and semantics of a new programming language. If you've solved the problems in a more familiar language it's fun to apply other languages to the same task as well. So far I've tried to solve these problems with Ruby, Python, and now with Clojure.  
  
  Solved
  * Problem 1
  
  
Noir
  I'm planning to build a simple website using Clojure with the web-framework Noir (http://webnoir.org/)
  
  
+: done
-: skipped 
/: in progress